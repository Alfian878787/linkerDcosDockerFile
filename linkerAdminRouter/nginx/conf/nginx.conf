# Log notice level and higher (e.g. state cache
# emits useful log messages on notice level).
error_log stderr notice;


env COREOS_PUBLIC_IPV4;


events {
    worker_connections 1024;
}


http {
    access_log syslog:server=unix:/dev/log;

    include mime.types;
    default_type application/octet-stream;
    sendfile on;
    keepalive_timeout 65;

    # Without this, cosocket-based code in worker
    # initialization cannot resolve leader.mesos.
    resolver 127.0.0.1;

    upstream mesos {
        server leader.mesos:5050;
    }

    upstream marathon {
        server master.mesos:8080;
    }

    upstream dcos_history_service {
        server master.mesos:15055;
    }

    upstream mesos_dns {
        server master.mesos:8123;
    }

    upstream exhibitor {
        server localhost:8181;
    }

    upstream cosmos {
        server localhost:7070;
    }

    proxy_cache_path /tmp/nginx-mesos-cache levels=1:2 keys_zone=mesos:1m inactive=10m;

    lua_package_path '$prefix/conf/?.lua;;';
    lua_shared_dict mesos_state_cache 100m;
    lua_shared_dict shmlocks 100k;

    init_worker_by_lua '
        local statecache = require "mesosstatecache"
        statecache.periodically_poll_mesos_state()
    ';

    server {
        listen 80 default_server;
        listen 443 ssl spdy default_server;
        ssl_certificate snakeoil.crt;
        ssl_certificate_key snakeoil.key;
        server_name dcos.*;
        root /opt/mesosphere/active/dcos-ui/usr;

        location = /mesos {
            rewrite ^/mesos$ $scheme://$http_host/mesos/ permanent;
        }

        location /mesos/ {
            proxy_set_header Host $http_host;
            proxy_pass http://mesos/;
        }

        location /package/ {
            proxy_set_header Host $http_host;
            proxy_pass http://cosmos/package/;
        }

        location /capabilities {
            proxy_set_header Host $http_host;
            proxy_pass http://cosmos/capabilities;
        }

        location /cache/master/ {
            add_header X-Cache-Status $upstream_cache_status;
            proxy_pass http://mesos/master/;
            proxy_cache mesos;
            proxy_cache_bypass  $http_cache_control;
            proxy_cache_lock on;
            proxy_cache_valid 200 5s;
        }

        location = /exhibitor {
            rewrite ^/exhibitor$ $scheme://$http_host/exhibitor/ permanent;
        }

        location /exhibitor/ {
            proxy_pass http://exhibitor/;
            proxy_redirect http://$proxy_host/ $scheme://$http_host/exhibitor/;
        }

        location ~ ^/slave/(?<slaveid>[0-9a-zA-Z-]+)(?<url>.*)$ {
            set $slaveaddr '';

            more_clear_input_headers Accept-Encoding;
            rewrite ^/slave/[0-9a-zA-Z-]+/.*$ $url break;
            rewrite_by_lua_file conf/slave.lua;

            proxy_set_header        Host $http_host;
            proxy_set_header        X-Real-IP $remote_addr;
            proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header        X-Forwarded-Proto $scheme;

            proxy_pass http://$slaveaddr;
        }

        location ~ ^/service/(?<serviceid>[0-9a-zA-Z-.]+)/?(?<url>.*) {
            set $serviceurl '';
            set $servicescheme '';

            more_clear_input_headers Accept-Encoding;
            rewrite ^/service/[0-9a-zA-Z-.]+/?.*$ /$url break;
            rewrite_by_lua_file conf/service.lua;

            proxy_set_header        Host $http_host;
            proxy_set_header        X-Real-IP $remote_addr;
            proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header        X-Forwarded-Proto $scheme;

            proxy_pass $serviceurl;
            proxy_redirect $servicescheme://$host/service/$serviceid/ /service/$serviceid/;
            proxy_redirect $servicescheme://$host/ /service/$serviceid/;
            proxy_redirect / /service/$serviceid/;

            # Disable buffering to allow real-time protocols
            proxy_buffering off;

            # Support web sockets and SPDY upgrades
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        location /metadata {
            content_by_lua_file conf/metadata.lua;
        }

        location /dcos-metadata/ {
            alias /opt/mesosphere/active/dcos-metadata/etc/;
        }

        location = /marathon {
            rewrite ^/marathon$ $scheme://$http_host/marathon/ permanent;
        }

        # TODO(cmaloney): Make the Web UI work in a subdirectory.
        location /marathon/ {
            proxy_set_header Host $http_host;
            proxy_pass http://marathon/;
        }

        location /pkgpanda/active.buildinfo.full.json {
            add_header Cache-Control "no-cache";
            alias /opt/mesosphere/active.buildinfo.full.json;
        }

        location /dcos-history-service/ {
            proxy_pass http://dcos_history_service/;
        }

        location = /mesos_dns {
            rewrite ^/mesos_dns$ $scheme://$http_host/mesos_dns/ permanent;
        }

        location /mesos_dns/ {
            proxy_set_header Host $http_host;
            proxy_pass http://mesos_dns/;
        }

        location ~ ^/cadvisor/(?<slaveid>[0-9a-zA-Z-]+)(?<url>.*)$ {
            set $slaveaddr '';

            more_clear_input_headers Accept-Encoding;
            rewrite ^/cadvisor/[0-9a-zA-Z-]+/.*$ $url break;
            rewrite_by_lua_file conf/cadvisor.lua;

            proxy_set_header        Host $http_host;
            proxy_set_header        X-Real-IP $remote_addr;
            proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header        X-Forwarded-Proto $scheme;

            proxy_pass http://$slaveaddr;
        }
    }
}
