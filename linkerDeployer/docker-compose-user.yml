version: '2'
services:
  zookeeper:
    image: linkerrepository/zookeeper
    network_mode: host
    command: /init.sh
    env_file: .env
    privileged: true
    restart: always
    environment:
     - "constraint:master==true"
     - "affinity:container!=*zookeeper*"

  mesosmaster:
    image: linkerrepository/mesos-master
    network_mode: host
    command: /entrypoint.sh
    env_file: .env
    depends_on:
     - zookeeper
    privileged: true
    restart: always
    environment:
     - MESOS_LOG_DIR=/var/log/mesos
     - MESOS_QUORUM=2
     - MESOS_REGISTRY=in_memory
     - MESOS_WORK_DIR=/var/lib/mesos
     - "constraint:master==true"
     - "affinity:container!=*mesosmaster*"

  marathon:
    image: linkerrepository/marathon
    network_mode: host
    command: /entrypoint.sh
    env_file: .env
    depends_on:
     - zookeeper
    privileged: true
    restart: always
    environment:
     - MARATHON_EVENT_SUBSCRIBER=http_callback
     - MARATHON_HTTP_ENDPOINTS=http://master.mesos:10004/v1/marathon/notify 
     - "constraint:master==true"
     - "affinity:container!=*marathon*"


  mesosslave:
    image: linkerrepository/mesos-slave
    volumes:
     - /sys/fs/cgroup:/sys/fs/cgroup
     - /var/run/docker.sock:/var/run/docker.sock
     - /usr/local/bin:/usr/local/bin
     - /tmp:/tmp
     - /opt/mesosphere:/opt/mesosphere
    network_mode: host
    command: /entrypoint.sh
    env_file: .env
    depends_on:
     - zookeeper
    privileged: true
    restart: always
    environment:
     - MESOS_CONTAINERIZERS=docker,mesos
     - MESOS_LOG_DIR=/var/log/mesos
     - MESOS_LOGGING_LEVEL=INFO
     - MESOS_RESOURCES=ports(*):[31000-32000,7000-7001,7199-7199,9042-9042,9160-9160,9090-9099,8083-8083,9999-9999]
     - "constraint:slave==true"
     - "affinity:container!=*mesosslave*"

  dnsserver:
    image: linkerrepository/linker_mesos_dns
    volumes:
    - /linker/config:/linker/config
    network_mode: host
    env_file: .env
    depends_on:
     - zookeeper
    privileged: true
    restart: always
    environment:
     - "constraint:master==true"
     - "affinity:container!=*dnsserver*"

  adminrouter:
    image: linkerrepository/linker_router
    network_mode: host
    depends_on:
     - genresolvconf
    restart: always
    environment:
     - "constraint:master==true"
     - "constraint:adminrouter==true"
     - "affinity:container!=*adminrouter*"


  prometheus:
    image: prom/prometheus:0.17.0
    network_mode: host
    entrypoint: /bin/prometheus
    command: -alertmanager.url=http://localhost:9093 -config.file=/etc/prometheus/prometheus.yml
    volumes:
    - /linker/prometheus:/etc/prometheus
    env_file: .env
    privileged: true
    restart: always
    environment:
     - "constraint:monitor==true"
     - "affinity:container!=*prometheus*"

  alertmanager:
    image: prom/alertmanager:stable
    network_mode: host
    volumes:
    - /linker/alertmanager:/etc/alertmanager
    env_file: .env
    privileged: true
    restart: always
    environment:
     - "constraint:monitor==true"
     - "affinity:container!=*alertmanager*"

  mongodb:
    image: linkerrepository/linkerdcos_mongodb_repl
    network_mode: host
    volumes:
    - /opt:/data
    env_file: .env
    privileged: true
    restart: always
    environment:
     - "constraint:master==true"
     - "affinity:container!=*mongodb*"

  dcosclient:
    image: linkerrepository/linkerdcos_client
    network_mode: host
    volumes:
    - /linker/docker:/linker/docker
    - /var/log:/var/log
    env_file: .env
    privileged: true
    restart: always
    depends_on:
     - mongodb
     - dnsserver
    entrypoint: /usr/local/bin/dbcheck.sh
    command: /usr/local/bin/entrypoint.sh
    environment:
     - "constraint:master==true"
     - "affinity:container!=*dcosclient*"    

  genresolvconf:
    image: linkerrepository/linker_resolver
    volumes:
    - /etc/resolv.conf:/etc/resolv.conf
    network_mode: host
    env_file: .env
    depends_on:
     - dnsserver
    restart: always
    environment:
     - RESOLVERS=8.8.8.8
     - "affinity:container!=*genresolvconf*"
